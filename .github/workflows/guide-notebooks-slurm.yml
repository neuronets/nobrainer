name: Guide Notebooks Regression
run-name: Guide Notebooks Regression
on: [push]
env:
  BASE_DIR: /om/weka/gablab/ohinds
  ACTION_RUNNER_DIR: /om/weka/gablab/ohinds/sw/actions-runner
jobs:
  start_node_runner:
    runs-on: [self-hosted, nobrainer-self-hosted-ci]
    outputs:
      JOBID: ${{ steps.sbatch.outputs.JOBID }}
    steps:
      - name: sbatch
        id: sbatch
        run: |
          set -xe
          JOBID=$(sbatch \
                    --time=100 \
                    --mem=16G \
                    --partition=gablab \
                    --chdir=${ACTION_RUNNER_DIR} \
                    run.sh | cut -d ' ' -f 4)
          echo "Submitted batch job with id ${JOBID}"
          echo "Waiting for job to start"
          while [ 1 ]; do
            node=$(squeue --noheader -j ${JOBID} -o "%N")
            if [ -z ${node} ]; then
              sleep 1;
            else
              echo "Found node ${node}"
              break;
            fi
          done
          echo "JOBID=${JOBID}" >> "$GITHUB_OUTPUT"

  guide_notebooks_regression:
    needs: start_node_runner
    env:
      SINGULARITY_IMAGE: ${BASE_DIR}/img/tensorflow_latest-gpu.sif
      WORKDIR: ${BASE_DIR}/${ACTION_RUNNER_DIR}/_work/nobrainer/nobrainer
    runs-on: [self-hosted, nobrainer-ci-self-hosted-runner]
    steps:
      - name: clone
        uses: actions/checkout@v3
      - name: install
        run: |
          set -xe
          cd ${WORKDIR}
          singularity exec -B /om ${SINGULARITY_IMAGE} python -m venv ${WORKDIR}/env
          util/singularity-exec-in-env.sh pip install --upgrade pip
          util/singularity-exec-in-env.sh pip install jupyter
          util/singularity-exec-in-env.sh pip install -e .
          util/singularity-exec-in-env.sh nobrainer info
      - name: run
        run: |
          set -xe
          cd ${WORKDIR}
          for notebook in $(ls ${WORKDIR}/guide/[0-9][0-9]-*.ipynb); do
            echo "running ${notebook} from ${PWD}"
            ${WORKDIR}/util/singularity-exec-in-env.sh
              jupyter nbconvert \
                --execute ${notebook} \
                --to markdown \
                --stdout
          done

  shutdown_node_runner:
    if: always()
    needs: [start_node_runner, guide_notebooks_regression]
    runs-on: [self-hosted, nobrainer-self-hosted-ci]
    steps:
      - name: cleanup
        env:
          JOBID: ${{ needs.start_node_runner.outputs.JOBID }}
        run: |
          echo "jobid is ${JOBID}"
          scancel ${JOBID}
